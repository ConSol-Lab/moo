@article{SMITS2020100924,
title = {FlowSpec: A declarative specification language for intra-procedural flow-Sensitive data-flow analysis},
journal = {Journal of Computer Languages},
volume = {57},
pages = {100924},
year = {2020},
issn = {2590-1184},
doi = {https://doi.org/10.1016/j.cola.2019.100924},
url = {https://www.sciencedirect.com/science/article/pii/S2590118419300474},
html = {https://www.sciencedirect.com/science/article/pii/S2590118419300474},
author = {Jeff Smits and Guido Wachsmuth and Eelco Visser},
abstract = {Data-flow analysis is the static analysis of programs to estimate their approximate run-time behavior or approximate intermediate run-time values. It is an integral part of modern language specifications and compilers. In the specification of static semantics of programming languages, the concept of data-flow allows the description of well-formedness such as definite assignment of a local variable before its first use. In the implementation of compiler back-ends, data-flow analyses inform optimizations. Data-flow analysis has an established theoretical foundation. What lags behind is implementations of data-flow analysis in compilers, which are usually ad-hoc. This makes such implementations difficult to extend and maintain. In previous work researchers have proposed higher-level formalisms suitable for whole-program analysis in a separate tool, incremental analysis within editors, or bound to a specific intermediate representation. In this paper, we present FlowSpec, an executable formalism for specification of data-flow analysis. FlowSpec is a domain-specific language that enables direct and concise specification of data-flow analysis for programming languages, designed to express flow-sensitive, intra-procedural analyses. We define the formal semantics of FlowSpec in terms of monotone frameworks. We describe the design of FlowSpec using examples of standard analyses. We also include a description of our implementation of FlowSpec. In a case study we evaluate FlowSpec with the static analyses for Green-Marl, a domain-specific programming language for graph analytics.}
}